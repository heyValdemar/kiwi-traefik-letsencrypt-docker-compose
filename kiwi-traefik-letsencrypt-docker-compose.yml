# Kiwi TCMS with Let's Encrypt in a Docker Compose

# Author
# hey, Iâ€™m Vladimir Mikhalev, but my friends call me Valdemar.

# My website with detailed IT guides: https://www.heyvaldemar.com/
# Follow me on YouTube: https://www.youtube.com/channel/UCf85kQ0u1sYTTTyKVpxrlyQ?sub_confirmation=1
# Follow me on Twitter: https://twitter.com/heyValdemar
# Follow me on Instagram: https://www.instagram.com/heyvaldemar/
# Follow me on Facebook: https://www.facebook.com/heyValdemarFB/
# Follow me on TikTok: https://www.tiktok.com/@heyvaldemar
# Follow me on [LinkedIn](https://www.linkedin.com/in/heyvaldemar/)
# Follow me on [GitHub](https://github.com/heyvaldemar)

# Communication
# Chat with IT pros on Discord: https://discord.com/invite/D7fGMYjdR9
# Reach me at ask@sre.gg

# Give Thanks
# Support on GitHub: https://github.com/sponsors/heyValdemar
# Support on Patreon: https://www.patreon.com/heyValdemar
# Support on BuyMeaCoffee: https://www.buymeacoffee.com/heyValdemar
# Support on Ko-fi: https://ko-fi.com/heyValdemar
# Support on PayPal: https://www.paypal.com/paypalme/heyValdemarCOM

# Install Docker Engine and Docker Compose by following my guide: https://www.heyvaldemar.com/install-docker-engine-and-docker-compose-on-ubuntu-server/

# Note that custom_settings.py should be in the same directory with kiwi-traefik-letsencrypt-docker-compose.yml
# Edit custom_settings.py according to your requirements.

# Deploy Kiwi TCMS server with a Docker Compose using the command:
# docker compose -f kiwi-traefik-letsencrypt-docker-compose.yml -p kiwi up -d

volumes:
  mariadb-data:
  kiwi-uploads:
  traefik-certificates:

services:
  mariadb:
    # Image tag (replace with yours)
    image: mariadb:10.8
    command:
      --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mariadb-data:/var/lib/mysql
    environment:
      # Database name (replace with yours)
      MYSQL_DATABASE: kiwidb
      # Database user (replace with yours)
      MYSQL_USER: kiwidbuser
      # Database password (replace with yours)
      MYSQL_PASSWORD: Ei4waSDY9kqkAABab6BQ
      # MariaDB root password (replace with yours)
      MYSQL_ROOT_PASSWORD: Ldcb3wPcDPqWe5ank3VG
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  kiwi:
    image: kiwitcms/kiwi:latest
    volumes:
      - kiwi-uploads:/Kiwi/uploads:Z
      - ./custom_settings.py:/venv/lib64/python3.8/site-packages/tcms_settings_dir/custom_settings.py
    environment:
      KIWI_DB_HOST: mariadb
      KIWI_DB_PORT: 3306
      KIWI_DB_NAME: kiwidb
      KIWI_DB_USER: kiwidbuser
      KIWI_DB_PASSWORD: Ei4waSDY9kqkAABab6BQ
      KIWI_DONT_ENFORCE_HTTPS: 'true'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    labels:
      - "traefik.enable=true"
      # Kiwi URL (replace with yours)
      - "traefik.http.routers.kiwi.rule=Host(`kiwi.heyvaldemar.net`)"
      - "traefik.http.routers.kiwi.service=kiwi"
      - "traefik.http.routers.kiwi.entrypoints=websecure"
      - "traefik.http.services.kiwi.loadbalancer.server.port=8080"
      - "traefik.http.routers.kiwi.tls=true"
      - "traefik.http.routers.kiwi.tls.certresolver=letsencrypt"
      - "traefik.http.services.kiwi.loadbalancer.passhostheader=true"
      - "traefik.http.routers.kiwi.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
      traefik:
        condition: service_healthy

  traefik:
    # Image tag (replace with yours)
    image: traefik:2.8
    command:
      - "--log.level=WARN"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--entryPoints.ping.address=:8082"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      # Email for Let's Encrypt (replace with yours)
      - "--certificatesresolvers.letsencrypt.acme.email=callvaldemar@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/etc/traefik/acme
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    labels:
      - "traefik.enable=true"
      # Traefik URL (replace with yours)
      - "traefik.http.routers.dashboard.rule=Host(`traefik.kiwi.heyvaldemar.net`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.services.dashboard.loadbalancer.passhostheader=true"
      - "traefik.http.routers.dashboard.middlewares=authtraefik"
      # Basic Authentication for Traefik Dashboard
      # Username: traefikadmin (replace with yours)
      # Passwords must be encoded using MD5, SHA1, or BCrypt https://hostingcanada.org/htpasswd-generator/
      - "traefik.http.middlewares.authtraefik.basicauth.users=traefikadmin:$$2y$$10$$sMzJfirKC75x/hVpiINeZOiSm.Jkity9cn4KwNkRvO7hSQVFc5FLO"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    restart: unless-stopped
